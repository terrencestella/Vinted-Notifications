[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "vinted-notifications"
version = "0.1.0"
description = "Python notification bot for Vinted listings with web UI, Telegram notifications, and RSS feeds"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
authors = [
    {name = "Fuyucch1", email = ""},
    {name = "terrencestella", email = ""},
]
keywords = ["vinted", "notifications", "telegram", "rss", "web-scraping"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

dependencies = [
    "python-telegram-bot[job-queue]>=21.6",
    "requests>=2.31.0",
    "apscheduler>=3.10.0",
    "feedgen>=0.9.0",
    "flask>=2.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/terrencestella/Vinted-Notifications"
Repository = "https://github.com/terrencestella/Vinted-Notifications"
Issues = "https://github.com/terrencestella/Vinted-Notifications/issues"

[project.scripts]
vinted-notifications = "vinted_notifications:main"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["."]
omit = ["tests/*", "venv/*", ".venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]